[{"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/index.js":"1","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/App.js":"2","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/index.js":"3","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/goals.js":"4","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/accounts.js":"5","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/transactions.js":"6","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/budgets.js":"7","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/selectAccount.js":"8","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/selectGoal.js":"9","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/bills.js":"10","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/selectTransaction.js":"11","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/selectBudget.js":"12","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/SignUp.js":"13","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/NavBar.js":"14","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/selectBill.js":"15","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/SignIn.js":"16","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionsPanel.js":"17","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/Footer.js":"18","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/Dashboard.js":"19","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionForm.js":"20","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/UserEditForm.js":"21","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionUpdateForm.js":"22","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountsPanel.js":"23","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountUpdateForm.js":"24","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountForm.js":"25","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetFrom.js":"26","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalsPanel.js":"27","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetsPanel.js":"28","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountTransactionsView.js":"29","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalForm.js":"30","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalUpdateForm.js":"31","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetUpdateForm.js":"32","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillUpdateForm.js":"33","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillsPanel.js":"34","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/currentUser.js":"35","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillForm.js":"36","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetView.js":"37","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalView.js":"38","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/userActions.js":"39","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionPanelItem.js":"40","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillPanelItem.js":"41","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalViewItem.js":"42","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetViewItem.js":"43","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/budgetActions.js":"44","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/billActions.js":"45","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/goalsActions.js":"46","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/transactionActions.js":"47","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/accountActions.js":"48","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalsContainer.js":"49","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalPanelItem.js":"50","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountPanelItem.js":"51","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetsContainer.js":"52","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetPanelItem.js":"53","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillsContainer.js":"54","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountsContainer.js":"55","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionsContainer.js":"56","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalContainerItem.js":"57","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetContainerItem.js":"58","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillContainerItem.js":"59","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionContainerItem.js":"60"},{"size":621,"mtime":1613156698039,"results":"61","hashOfConfig":"62"},{"size":3948,"mtime":1613245945488,"results":"63","hashOfConfig":"62"},{"size":960,"mtime":1613070572398,"results":"64","hashOfConfig":"62"},{"size":789,"mtime":1612905325043,"results":"65","hashOfConfig":"62"},{"size":827,"mtime":1612899455525,"results":"66","hashOfConfig":"62"},{"size":876,"mtime":1612899494523,"results":"67","hashOfConfig":"62"},{"size":826,"mtime":1612899479741,"results":"68","hashOfConfig":"62"},{"size":272,"mtime":1612899536290,"results":"69","hashOfConfig":"62"},{"size":259,"mtime":1612905995346,"results":"70","hashOfConfig":"62"},{"size":789,"mtime":1613071485584,"results":"71","hashOfConfig":"62"},{"size":288,"mtime":1612899512941,"results":"72","hashOfConfig":"62"},{"size":267,"mtime":1612899525746,"results":"73","hashOfConfig":"62"},{"size":10208,"mtime":1613413275201,"results":"74","hashOfConfig":"62"},{"size":7711,"mtime":1613509560606,"results":"75","hashOfConfig":"62"},{"size":259,"mtime":1613070521993,"results":"76","hashOfConfig":"62"},{"size":4472,"mtime":1613491476690,"results":"77","hashOfConfig":"62"},{"size":4076,"mtime":1613585614435,"results":"78","hashOfConfig":"62"},{"size":2953,"mtime":1613499625050,"results":"79","hashOfConfig":"62"},{"size":1561,"mtime":1613239709077,"results":"80","hashOfConfig":"62"},{"size":8251,"mtime":1613581426639,"results":"81","hashOfConfig":"62"},{"size":9041,"mtime":1612832972287,"results":"82","hashOfConfig":"62"},{"size":8707,"mtime":1614014845177,"results":"83","hashOfConfig":"62"},{"size":1460,"mtime":1613529659161,"results":"84","hashOfConfig":"62"},{"size":5552,"mtime":1613529712502,"results":"85","hashOfConfig":"62"},{"size":4158,"mtime":1613529654009,"results":"86","hashOfConfig":"62"},{"size":5052,"mtime":1613581063046,"results":"87","hashOfConfig":"62"},{"size":1544,"mtime":1613594248210,"results":"88","hashOfConfig":"62"},{"size":1452,"mtime":1613498586950,"results":"89","hashOfConfig":"62"},{"size":4257,"mtime":1613529723519,"results":"90","hashOfConfig":"62"},{"size":4189,"mtime":1613527235582,"results":"91","hashOfConfig":"62"},{"size":4330,"mtime":1613527193476,"results":"92","hashOfConfig":"62"},{"size":5091,"mtime":1613529639501,"results":"93","hashOfConfig":"62"},{"size":5079,"mtime":1613529630054,"results":"94","hashOfConfig":"62"},{"size":1548,"mtime":1613530058727,"results":"95","hashOfConfig":"62"},{"size":411,"mtime":1612899436548,"results":"96","hashOfConfig":"62"},{"size":4962,"mtime":1613527462825,"results":"97","hashOfConfig":"62"},{"size":4445,"mtime":1613581144278,"results":"98","hashOfConfig":"62"},{"size":4134,"mtime":1613529990277,"results":"99","hashOfConfig":"62"},{"size":520,"mtime":1612899404095,"results":"100","hashOfConfig":"62"},{"size":3144,"mtime":1613497438209,"results":"101","hashOfConfig":"62"},{"size":2834,"mtime":1613504836244,"results":"102","hashOfConfig":"62"},{"size":555,"mtime":1613248015463,"results":"103","hashOfConfig":"62"},{"size":559,"mtime":1613248003215,"results":"104","hashOfConfig":"62"},{"size":526,"mtime":1612644974495,"results":"105","hashOfConfig":"62"},{"size":488,"mtime":1613067084781,"results":"106","hashOfConfig":"62"},{"size":488,"mtime":1612900609743,"results":"107","hashOfConfig":"62"},{"size":623,"mtime":1612554285927,"results":"108","hashOfConfig":"62"},{"size":547,"mtime":1612638983200,"results":"109","hashOfConfig":"62"},{"size":1030,"mtime":1613418530122,"results":"110","hashOfConfig":"62"},{"size":4397,"mtime":1613597189377,"results":"111","hashOfConfig":"62"},{"size":1932,"mtime":1613497486804,"results":"112","hashOfConfig":"62"},{"size":1071,"mtime":1613418521755,"results":"113","hashOfConfig":"62"},{"size":1849,"mtime":1613498737399,"results":"114","hashOfConfig":"62"},{"size":998,"mtime":1613583218583,"results":"115","hashOfConfig":"62"},{"size":4249,"mtime":1613506673401,"results":"116","hashOfConfig":"62"},{"size":1624,"mtime":1613432350669,"results":"117","hashOfConfig":"62"},{"size":1418,"mtime":1612907637633,"results":"118","hashOfConfig":"62"},{"size":3038,"mtime":1613442410320,"results":"119","hashOfConfig":"62"},{"size":1266,"mtime":1613443014299,"results":"120","hashOfConfig":"62"},{"size":579,"mtime":1613248246964,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1dg8eey",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"124"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/index.js",[],["251","252"],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/App.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/index.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/goals.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/accounts.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/transactions.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/budgets.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/selectAccount.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/selectGoal.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/bills.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/selectTransaction.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/selectBudget.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/SignUp.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/NavBar.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/selectBill.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/SignIn.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionsPanel.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/Footer.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/Dashboard.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionForm.js",["253"],"import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport {Col} from 'react-bootstrap';\nimport {connect} from 'react-redux'\nimport { addTransaction } from '../actions/transactionActions';\nimport Test from '../images/Test.png'\nclass TransactionFrom extends React.Component {\n    state = {\n        date: \"\",\n        description: \"\",\n        amount: \"\",\n        category: \"\",\n        budget_id: \"\",\n        account_id: \"\",\n        to_account_id: \"\",\n        goal_id: \"\",\n        error: \"\"\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleInputId = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n    handleInputAmt = (e) => {\n            this.setState({\n                [e.target.name]: parseFloat(e.target.value)\n            })\n    }\n\n\n\n    renderBudgets = () => {\n        return this.props.budgets.map(budgetObj => {\n            return <option value={budgetObj.id}>{budgetObj.name}</option>\n        })\n    }\n    renderAccounts = () => {\n        return this.props.accounts.map(accountObj => {\n            return <option value={accountObj.id}>{accountObj.name} - ${accountObj.balance}</option>\n        })\n    }\n    renderGoals = () => {\n        return this.props.goals.map(goalObj => {\n            return <option value={goalObj.id}>{goalObj.name}</option>\n        })\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(\"http://localhost:3000/transactions\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                date: this.state.date,\n                description: this.state.description,\n                amount: this.state.amount,\n                budget_id: this.state.budget_id,\n                account_id: this.state.account_id,\n                to_account_id: this.state.to_account_id,\n                goal_id: this.state.goal_id,\n                category: this.state.category\n            })\n        })\n        .then(response => response.json())\n        .then(newTransObj => {\n            if (newTransObj.error){\n                this.setState({\n                    error: newTransObj.error\n                })\n            } else {\n            this.props.addTransaction(newTransObj)\n            this.props.history.goBack()\n            }\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"transaction-form\" >\n\n                {this.state.error ?\n                    <Alert className=\"alert\" variant=\"danger\" onClose={() => this.setState({error: ''})} dismissible>\n                        <Alert.Heading>Oops! Something went wrong!</Alert.Heading>\n                        <ul>\n                            {this.state.error.map(message => {\n                                return <li>{message}</li>\n                            })}\n                        </ul>\n                    </Alert>\n                    : null }\n\n                    <h1>New Transaction</h1>\n                <Form onSubmit={this.handleSubmit} >\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridDate\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control type=\"date\" name=\"date\"  placeholder=\"Select transaction date\" value={this.state.date} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridDescription\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control type=\"text\" name=\"description\" placeholder=\"Vendor, purchase, etc.\" value={this.state.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCategory\">\n                    <Form.Label>Category</Form.Label>\n                    <Form.Control as=\"select\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} >\n                        <option>Select</option>\n                        <option>Auto & Transport</option>\n                        <option>Bills & Utilities</option>\n                        <option>Business Services</option>\n                        <option>Education</option>\n                        <option>Entertainment</option>\n                        <option>Fees & Charges</option>\n                        <option>Financial</option>\n                        <option>Food & Dining</option>\n                        <option>Gifts & Donations</option>\n                        <option>Health & Fitness</option>\n                        <option>Home</option>\n                        <option>Income</option>\n                        <option>Investments</option>\n                        <option>Kids</option>\n                        <option>Loans</option>\n                        <option>Misc Expenses</option>\n                        <option>Personal Care</option>\n                        <option>Pets</option>\n                        <option>Shopping</option>\n                        <option>Taxes</option>\n                        <option>Transfer</option>\n                        <option>Travel</option>\n                        <option>Withdrawal</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridBudgetId\">\n                    <Form.Label>Budget </Form.Label>\n                    <Form.Control as=\"select\" name=\"budget_id\" value={this.state.budget_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderBudgets()}\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridGoalId\">\n                    <Form.Label>Goal</Form.Label>\n                    <Form.Control as=\"select\" name=\"goal_id\" value={this.state.goal_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderGoals()}\n                    </Form.Control>\n                </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridFromAccount\">\n                    <Form.Label>From Account</Form.Label>\n                    <Form.Control as=\"select\" name=\"account_id\" value={this.state.account_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderAccounts()}\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridToAccount\">\n                    <Form.Label>To Account</Form.Label>\n                    <Form.Control as=\"select\" name=\"to_account_id\" value={this.state.to_account_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderAccounts()}\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridAmount\">\n                    <Form.Label>Amount</Form.Label>\n                    <Form.Control type=\"number\" name=\"amount\" as=\"input\" value={this.state.amount} onChange={this.handleInputAmt} step=\"0.01\"/>\n                    </Form.Group>\n                </Form.Row>\n                <img className=\"transaction-form-image\" src={Test} height=\"300px\" width=\"300px\" >\n                </img><br></br>\n                <div className=\"form-buttons\">\n                <Button onClick={() => this.props.history.goBack()}>Cancel</Button>\n                <Button variant=\"success\" type=\"submit\">Add Transaction</Button>\n                </div>\n                </Form>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        budgets: state.budgets,\n        accounts: state.accounts,\n        goals: state.goals,\n    }\n}\n\nconst mapDispatchToProps = {\n    addTransaction: addTransaction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionFrom)","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/UserEditForm.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionUpdateForm.js",["254"],"import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport {Col} from 'react-bootstrap';\nimport {connect} from 'react-redux'\nimport { updateTransaction } from '../actions/transactionActions';\nimport Test from '../images/Test.png'\nclass TransactionUpdateForm extends React.Component {\n    state = {\n        date: this.props.selectTransaction.date,\n        description: this.props.selectTransaction.description,\n        amount: this.props.selectTransaction.amount,\n        category: this.props.selectTransaction.category,\n        budget_id: this.props.selectTransaction.budget_id,\n        account_id: this.props.selectTransaction.account_id,\n        to_account_id: this.props.selectTransaction.to_account_id,\n        goal_id: this.props.selectTransaction.goal_id,\n        error: \"\"\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleInputId = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n    handleInputAmt = (e) => {\n        this.setState({\n            [e.target.name]: parseFloat(e.target.value)\n        })\n    }\n\n\n\n    renderBudgets = () => {\n        return this.props.budgets.map(budgetObj => {\n            return <option value={budgetObj.id}>{budgetObj.name}</option>\n        })\n    }\n    renderAccounts = () => {\n        return this.props.accounts.map(accountObj => {\n            return <option value={accountObj.id}>{accountObj.name} - ${accountObj.balance}</option>\n        })\n    }\n    renderGoals = () => {\n        return this.props.goals.map(goalObj => {\n            return <option value={goalObj.id}>{goalObj.name}</option>\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const id = e.target.id\n        fetch(`http://localhost:3000/transactions/${id}`, {\n            method: \"PATCH\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                date: this.state.date,\n                description: this.state.description,\n                amount: this.state.amount,\n                budget_id: this.state.budget_id,\n                account_id: this.state.account_id,\n                to_account_id: this.state.to_account_id,\n                goal_id: this.state.goal_id,\n                category: this.state.category\n            })\n        })\n        .then(response => response.json())\n        .then(updatedTransObj => {\n            if (updatedTransObj.error){\n                this.setState({\n                    error: updatedTransObj.error\n                })\n            } else {\n            this.props.updateTransaction(updatedTransObj)\n            this.props.history.push('/transactions')\n            }\n        })\n    }\n\n    componentDidMount = () => {\n        \n    }\n\n    render(){\n        return(\n            <div className=\"transaction-form\" >\n\n                    {this.state.error ?\n                    <Alert className=\"alert\" variant=\"danger\" onClose={() => this.setState({error: ''})} dismissible>\n                        <Alert.Heading>Oops! Something went wrong!</Alert.Heading>\n                        <ul>\n                            {this.state.error.map(message => {\n                                return <li>{message}</li>\n                            })}\n                        </ul>\n                    </Alert>\n                    : null }\n\n                <h1>Update Transaction</h1>\n                <Form onSubmit={this.handleSubmit} id={this.props.selectTransaction.id} >\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridDate\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control type=\"date\" name=\"date\"  placeholder=\"Select transaction date\" value={this.state.date} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridDescription\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control type=\"text\" name=\"description\" placeholder=\"Vendor, purchase, etc.\" value={this.state.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCategory\">\n                    <Form.Label>Category</Form.Label>\n                    <Form.Control as=\"select\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} >\n                        <option>Select</option>\n                        <option>Auto & Transport</option>\n                        <option>Bills & Utilities</option>\n                        <option>Business Services</option>\n                        <option>Education</option>\n                        <option>Entertainment</option>\n                        <option>Fees & Charges</option>\n                        <option>Financial</option>\n                        <option>Food & Dining</option>\n                        <option>Gifts & Donations</option>\n                        <option>Health & Fitness</option>\n                        <option>Home</option>\n                        <option>Income</option>\n                        <option>Investments</option>\n                        <option>Kids</option>\n                        <option>Loans</option>\n                        <option>Misc Expenses</option>\n                        <option>Personal Care</option>\n                        <option>Pets</option>\n                        <option>Shopping</option>\n                        <option>Taxes</option>\n                        <option>Transfer</option>\n                        <option>Travel</option>\n                        <option>Withdrawal</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridBudgetId\">\n                    <Form.Label>Budget </Form.Label>\n                    <Form.Control as=\"select\" name=\"budget_id\" value={this.state.budget_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderBudgets()}\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridGoalId\">\n                    <Form.Label>Goal</Form.Label>\n                    <Form.Control as=\"select\" name=\"goal_id\" value={this.state.goal_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderGoals()}\n                    </Form.Control>\n                </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridFromAccount\">\n                    <Form.Label>From Account</Form.Label>\n                    <Form.Control as=\"select\" name=\"account_id\" value={this.state.account_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderAccounts()}\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridToAccount\">\n                    <Form.Label>To Account</Form.Label>\n                    <Form.Control as=\"select\" name=\"to_account_id\" value={this.state.to_account_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderAccounts()}\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridAmount\">\n                    <Form.Label>Amount</Form.Label>\n                    <Form.Control type=\"number\" name=\"amount\" as=\"input\" value={this.state.amount} onChange={this.handleInputAmt} step=\"0.01\"/>\n                    </Form.Group>\n                </Form.Row> \n                <img className=\"transaction-form-image\" src={Test} height=\"300px\" width=\"300px\" >\n                </img><br></br>\n\n                <Button variant=\"primary\" onClick={() => this.props.history.goBack()}>Cancel</Button>\n                <Button variant=\"success\" type=\"submit\">Update Transaction </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        budgets: state.budgets,\n        accounts: state.accounts,\n        goals: state.goals,\n        selectTransaction: state.selectTransaction \n    }\n}\n\nconst mapDispatchToProps = {\n    updateTransaction: updateTransaction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionUpdateForm)","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountsPanel.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountUpdateForm.js",["255"],"import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert'\nimport {Col} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport {connect} from 'react-redux';\nimport { updateAccount } from '../actions/accountActions';\nimport AccountsImg from '../images/Accounts.png'\n\nclass AccountUpdateForm extends React.Component {\n            state = {\n                name: \"\",\n                category: \"\",\n                balance: \"\"\n            }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleBalanceChange = (e) => {\n        this.setState({\n            [e.target.name]: parseFloat(e.target.value)\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const id = e.target.id\n        fetch(`http://localhost:3000/accounts/${id}`, {\n            method: \"PATCH\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                name: this.state.name, \n                category: this.state.category, \n                balance: this.state.balance\n            })\n        })\n        .then(response => response.json())\n        .then(updatedAcc => {\n            if (updatedAcc.error){\n                this.setState({\n                    error: updatedAcc.error\n                })\n            } else {\n            this.props.updateAccount(updatedAcc)\n            this.props.history.push('/accounts')\n            }\n        })\n    }\n\n    componentDidMount = () => {\n        console.log(\"mount\")\n        if(this.props.selectAccount) {\n            this.setState({\n                name: this.props.selectAccount.name,\n                category: this.props.selectAccount.category,\n                balance: this.props.selectAccount.balance\n            })\n        } \n        }\n\n    render(){\n        return(\n            <div>\n                {this.props.selectAccount ? \n                            <div className=\"account-form shadow-lg rounded\">\n\n                                    {this.state.error ?\n                                    <Alert className=\"alert\" variant=\"danger\" onClose={() => this.setState({error: ''})} dismissible>\n                                        <Alert.Heading>Oops! Something went wrong!</Alert.Heading>\n                                        <ul>\n                                            {this.state.error.map(message => {\n                                                return <li>{message}</li>\n                                            })}\n                                        </ul>\n                                    </Alert>\n                                    : null}\n\n                                <h2>Update Account</h2>\n                                <Form id={this.props.selectAccount.id} onSubmit={this.handleSubmit} >\n                                <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridName\">\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"name\"  placeholder=\"Bank, lender, etc.\" value={this.state.name} onChange={this.handleInputChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridCategory\">\n                                    <Form.Label>Category</Form.Label>\n                                    <Form.Control as=\"select\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} >\n                                        <option>Select</option>\n                                        <option>Checking</option>\n                                        <option>Savings</option>\n                                        <option>Cash</option>\n                                        <option>Investments</option>\n                                        <option>Loan</option>\n                                        <option>Credit Card</option>\n                                        <option>Mortgage</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridBalance\">\n                                    <Form.Label>Balance</Form.Label>\n                                    <Form.Control type=\"number\" name=\"balance\" placeholder=\"$\" value={this.state.balance} onChange={this.handleBalanceChange} />\n                                </Form.Group>\n                                </Form.Row>\n                                <div>\n                                <img className=\"account-from-image\" src={AccountsImg}>\n                                </img>\n                                </div>\n                                <Button onClick={() => this.props.history.push('/accounts')}>Cancel</Button>\n                                <Button type=\"submit\" variant=\"success\" >Update Account</Button>\n                                </Form>\n                            </div>\n\n                            :\n                            <div>\n                                {this.props.history.push('/accounts')}\n                            </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectAccount: state.selectAccount\n    }\n}\n\nconst mapDispatchToProps = {\n    updateAccount: updateAccount\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountUpdateForm)","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountForm.js",["256"],"import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert'\nimport {Col} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport {connect} from 'react-redux';\nimport { addAccount } from '../actions/accountActions';\nimport AccountsImg from '../images/Accounts.png'\nclass AccountForm extends React.Component {\n    state = {\n        name: \"\",\n        category: \"\",\n        balance: \"\",\n        error: \"\"\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleBalanceChange = (e) => {\n        this.setState({\n            [e.target.name]: parseFloat(e.target.value)\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(\"http://localhost:3000/accounts\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                name: this.state.name, \n                category: this.state.category, \n                balance: this.state.balance, \n                user_id: this.props.currentUser.id\n            })\n        })\n        .then(response => response.json())\n        .then(newAcc => {\n            if (newAcc.error){\n                this.setState({\n                    error: newAcc.error\n                })\n            } else {\n            this.props.addAccount(newAcc)\n            this.props.history.push('/accounts')\n            }\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"account-form shadow-lg rounded\">\n\n                    {this.state.error ?\n                    <Alert className=\"alert\" variant=\"danger\" onClose={() => this.setState({error: ''})} dismissible>\n                        <Alert.Heading>Oops! Something went wrong!</Alert.Heading>\n                        <ul>\n                            {this.state.error.map(message => {\n                                return <li>{message}</li>\n                            })}\n                        </ul>\n                    </Alert>\n                    : null}\n\n                <h2>New Account</h2>\n                <Form onSubmit={this.handleSubmit} >\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridName\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"text\" name=\"name\"  placeholder=\"Bank, lender, etc.\" value={this.state.name} onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridCategory\">\n                    <Form.Label>Category</Form.Label>\n                    <Form.Control as=\"select\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} >\n                        <option>Select</option>\n                        <option>Checking</option>\n                        <option>Savings</option>\n                        <option>Cash</option>\n                        <option>Investments</option>\n                        <option>Loan</option>\n                        <option>Credit Card</option>\n                        <option>Mortgage</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridBalance\">\n                    <Form.Label>Balance</Form.Label>\n                    <Form.Control type=\"number\" name=\"balance\" placeholder=\"$\" value={this.state.balance} onChange={this.handleBalanceChange} />\n                 </Form.Group>\n                </Form.Row>\n                <div>\n                <img className=\"account-from-image\" src={AccountsImg}>\n                </img>\n                </div>\n                <Button onClick={() => this.props.history.push('/accounts')}>Cancel</Button>\n                <Button type=\"submit\" variant=\"success\">Add Account</Button>\n    \n\n                </Form>\n\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = {\n    addAccount: addAccount\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountForm)","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetFrom.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalsPanel.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetsPanel.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountTransactionsView.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalForm.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalUpdateForm.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetUpdateForm.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillUpdateForm.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillsPanel.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/reducers/currentUser.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillForm.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetView.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalView.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/userActions.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionPanelItem.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillPanelItem.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalViewItem.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetViewItem.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/budgetActions.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/billActions.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/goalsActions.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/transactionActions.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/actions/accountActions.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalsContainer.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalPanelItem.js",["257"],"import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport { deleteGoal, selectGoal, updateGoal } from '../actions/goalsActions';\nimport moment from 'moment'\nimport {TrashFill, GearWideConnected, Check2Circle} from 'react-bootstrap-icons'\nimport Confetti from 'react-dom-confetti';\n\nclass GoalPanelItem extends React.Component {\n    state = {\n        confetti: false\n    }\n\n    handleUpdate = (e) => {\n        const id = e.currentTarget.id\n        this.props.selectGoal(this.props.goal)\n        this.props.history.push(`/goals/edit/${id}`)\n    }\n\n    handleMarkComplete = (e) => {\n        const id = e.currentTarget.id\n        fetch(`http://localhost:3000/goals/${id}`, {\n            method: \"PATCH\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                complete: true\n            })\n        })\n        .then(response => response.json())\n        .then(updatedGoal => {\n            this.props.updateGoal(updatedGoal)\n            this.setState({\n                confetti: true\n            })\n        })\n    }\n\n    handleDelete = (e) => {\n        const id = parseInt(e.currentTarget.id)\n        fetch(`http://localhost:3000/goals/${id}`, {method: \"DELETE\"})\n        .then(response => response.json())\n        .then(() => {\n            this.props.deleteGoal(id)\n        })\n    }\n\n    handleView = () => {\n        this.props.selectGoal(this.props.goal)\n        this.props.history.push('/goalview')\n    }\n\n    renderDaysLeft = () => {\n        let daysLeft = Math.abs(moment().diff(this.props.goal.due_date, \"days\"))\n        return daysLeft\n    }\n\n    renderAmountLeft = () => {\n        let goalTransactions = [0];\n        let balanceRemaining = 0;\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n        this.props.transactions.map(transaction => {\n            if (transaction.goal_id === this.props.goal.id) {\n                goalTransactions.push(transaction.amount)\n            }\n        })\n        goalTransactions = Math.round(goalTransactions.reduce(reducer))\n        balanceRemaining = this.props.goal.amount - goalTransactions\n        return balanceRemaining.toLocaleString()\n    }\n\n    render(){\n\n        const {id, name, description, amount, due_date, complete} = this.props.goal\n\n        const config = {\n            angle: \"219\",\n            spread: \"281\",\n            startVelocity: 40,\n            elementCount: \"168\",\n            dragFriction: 0.12,\n            duration: 3000,\n            stagger: 3,\n            width: \"10px\",\n            height: \"10px\",\n            perspective: \"500px\",\n            colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n          };\n\n        return(\n                 <tr>\n                    <td className=\"align-middle\">{name}</td>\n                    <td className=\"align-middle\">{due_date}</td>\n                    <td className=\"align-middle\">{description}</td>\n                    <td className=\"align-middle\">${amount.toLocaleString()}</td>\n                    <td className=\"align-middle\">${this.renderAmountLeft()} left</td>\n                    <td className=\"align-middle\">{this.renderDaysLeft()}</td>\n                    <td className=\"align-middle\">\n                    {complete ? \n                    <Button size=\"sm\" disabled variant=\"success\" >Completed <Confetti active={this.state.confetti} config={ config }/></Button>\n                    :\n                    <span>\n                    <Button size=\"sm\" id={id} variant=\"success\" onClick={this.handleMarkComplete} >Complete {<Check2Circle/>} </Button>\n                    <Button size=\"sm\" id={id} onClick={this.handleView}>View</Button>\n                    <Button size=\"sm\" id={id} onClick={this.handleUpdate} >{<GearWideConnected/>}</Button>\n                    </span>\n                    }\n                    <Button size=\"sm\" id={id} variant=\"danger\" onClick={this.handleDelete}>{<TrashFill/>}</Button>\n                    </td>\n                </tr>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        transactions: state.transactions\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteGoal: deleteGoal,\n    selectGoal: selectGoal,\n    updateGoal: updateGoal\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(GoalPanelItem))","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountPanelItem.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetsContainer.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetPanelItem.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillsContainer.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/AccountsContainer.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionsContainer.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/GoalContainerItem.js",["258"],"import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport {connect} from 'react-redux'\n\n\nclass GoalContainerItem extends React.Component {\n\n    renderGoalProgress = () => {\n        if(!this.props.goal.complete){\n\n            let goalTransactions = [0];\n            let progress = 0;\n            const reducer = (accumulator, currentValue) => accumulator + currentValue;\n    \n            this.props.transactions.map(transaction => {\n                if(transaction.goal_id === this.props.goal.id) {\n                    goalTransactions.push(transaction.amount)\n                }\n            })\n    \n            goalTransactions = Math.round(goalTransactions.reduce(reducer))\n            progress = ((goalTransactions/this.props.goal.amount)*100)\n            return progress\n        } else {\n            return 100\n        }\n    }\n\n\n\n    render(){\n        return (\n            <div>\n                <ListGroup.Item>\n                <h5>{this.props.goal.name}</h5>\n                <div>\n                <ProgressBar animated striped variant=\"info\" now={this.renderGoalProgress()} />\n                </div>\n                </ListGroup.Item>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        transactions: state.transactions\n    }\n}\n\nexport default connect(mapStateToProps, null)(GoalContainerItem)",["259","260"],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BudgetContainerItem.js",["261"],"import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\n\n\nclass BudgetsContainerItem extends React.Component {\n\n\n    filterTransactions = () => {\n        let budgetTransactions = [0];\n        this.props.transactions.map(transaction => {\n            if (transaction.budget_id === this.props.budget.id && transaction.date.split(\"-\")[0] + \"-\" + transaction.date.split(\"-\")[1] === moment().format(\"YYYY-MM\")) {\n                budgetTransactions.push(transaction.amount)\n            }\n        })\n        return budgetTransactions\n    }\n\n    // RENDERS RATIO FOR TRANSACTIONS THAT MATCH BUDGET_ID AND CHECKS FOR CURRENT YEAR + MONTH\n    renderRatio = () => {\n        // let budgetTransactions = [0];\n        let ratio = 0;\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n        // this.props.transactions.map(transaction => {\n        //     if (transaction.budget_id === this.props.budget.id && transaction.date.split(\"-\")[0] + \"-\" + transaction.date.split(\"-\")[1] === moment().format(\"YYYY-MM\")) {\n        //         budgetTransactions.push(transaction.amount)\n        //     }\n        // })\n            let budgetTransactions = this.filterTransactions()\n            budgetTransactions = Math.round(budgetTransactions.reduce(reducer))\n            ratio = ((budgetTransactions/this.props.budget.amount)*100)\n            return ratio\n    }\n\n    // RENDERS PROGRESS BAR COLOR DEPENDING ON RATIO, FUNCTION NEEDS REFACTORING\n    renderBarStatus = () => {\n        // let budgetTransactions = [0];\n        let ratio = 0;\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n        // this.props.transactions.map(transaction => {\n        //     if (transaction.budget_id === this.props.budget.id && transaction.date.split(\"-\")[0] + \"-\" + transaction.date.split(\"-\")[1] === moment().format(\"YYYY-MM\")) {\n        //         budgetTransactions.push(transaction.amount)\n        //     }\n        // })\n\n            let budgetTransactions = this.filterTransactions()\n\n            budgetTransactions = Math.round(budgetTransactions.reduce(reducer))\n            ratio = ((budgetTransactions/this.props.budget.amount)*100)\n\n            if (ratio > 100) {\n                return \"danger\"\n            } if ( ratio > 80) {\n                return \"warning\"\n            } else {\n                return \"success\"\n            }\n    }\n\n    render(){\n        return (\n            <div>\n                <ListGroup.Item>\n                <h5>{this.props.budget.name}</h5>\n                <div>\n                <ProgressBar animated striped variant={this.renderBarStatus()} now={this.renderRatio()} />\n                </div>\n                </ListGroup.Item>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        transactions: state.transactions\n    }\n}\n\nexport default connect(mapStateToProps, null)(BudgetsContainerItem)","/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/BillContainerItem.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod5-Capitall/capitall-frontend/src/components/TransactionContainerItem.js",[],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":185,"column":17,"nodeType":"268","endLine":185,"endColumn":98},{"ruleId":"266","severity":1,"message":"267","line":190,"column":17,"nodeType":"268","endLine":190,"endColumn":98},{"ruleId":"266","severity":1,"message":"267","line":108,"column":33,"nodeType":"268","endLine":108,"endColumn":87},{"ruleId":"266","severity":1,"message":"267","line":95,"column":17,"nodeType":"268","endLine":95,"endColumn":71},{"ruleId":"269","severity":1,"message":"270","line":63,"column":49,"nodeType":"271","messageId":"272","endLine":63,"endColumn":51},{"ruleId":"269","severity":1,"message":"270","line":16,"column":53,"nodeType":"271","messageId":"272","endLine":16,"endColumn":55},{"ruleId":"262","replacedBy":"273"},{"ruleId":"264","replacedBy":"274"},{"ruleId":"269","severity":1,"message":"270","line":13,"column":49,"nodeType":"271","messageId":"272","endLine":13,"endColumn":51},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["275"],["276"],"no-global-assign","no-unsafe-negation"]